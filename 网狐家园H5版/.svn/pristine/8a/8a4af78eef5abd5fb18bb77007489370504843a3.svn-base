var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var __extends = this && this.__extends || function __extends(t, e) { 
 function r() { 
 this.constructor = t;
}
for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
r.prototype = e.prototype, t.prototype = new r();
};
var models;
(function (models) {
    var Toast = (function (_super) {
        __extends(Toast, _super);
        function Toast() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Toast.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.name = "Toast";
            this.once(egret.Event.ADDED_TO_STAGE, this.onInitLayer, this);
        };
        Toast.prototype.onInitLayer = function () {
            this.$setTouchEnabled(false);
            var toast = utils.createBitmapByName("game_horn_bg_png");
            utils.setAnchorMidBottom(toast);
            toast.name = "toast";
            this.addChild(toast);
            toast.x = 667;
            toast.y = 680;
        };
        Toast.prototype.show = function (message, delayTime) {
            var _this = this;
            if (message.length) {
                var content = new eui.Label;
                content.text = message;
                //设置颜色等文本属性
                content.textColor = 0xcd2626;
                content.size = 22;
                content.lineSpacing = 24;
                content.textAlign = egret.HorizontalAlign.JUSTIFY;
                this.addChild(content);
                utils.setAnchorMidBottom(content);
                content.x = 667;
                content.y = 660;
                var tw = egret.Tween.get(this)
                    .wait(1000)
                    .to({ x: 0, y: 1400 }, delayTime ? delayTime : 500)
                    .call(function () {
                    managers.GameManager.getInstance().m_MainStage.removeChild(_this);
                });
            }
        };
        return Toast;
    }(eui.UILayer));
    models.Toast = Toast;
    __reflect(Toast.prototype, "models.Toast");
})(models || (models = {}));
//# sourceMappingURL=Toast.js.map