/*
*欢迎界面
*预加载大厅资源
*加载服务信息
*进入登录场景
*/
namespace controller
{
    export class WelComeController extends Controller implements df.IController,RES.PromiseTaskReporter
    {
       
        //构造
        public constructor()
         {
            super();

            //视图名称
            this.name = "WelComeController"

            //设置当前视图
            managers.FrameManager.getInstance().setRunningController(this);

            //初始场景
            this.createWelComeView();

            //注册触摸
            this.addEventListener(egret.TouchEvent.TOUCH_BEGIN,this.onTouchBegan,this);
            this.addEventListener(egret.TouchEvent.TOUCH_MOVE,this.onTouchMove,this);
            this.addEventListener(egret.TouchEvent.TOUCH_END,this.onTouchEnd,this);
         }

         /* controller生命周期
         *  viewWillAppear
         *  viewDidAppear 
         *  viewWillDisappear 
         *  viewDidDisappear
         *  dealloc 回收资源
         */
         viewWillAppear(animated:boolean):void
         {


         }

         viewDidAppear(animated:boolean):void
         {


         }

         viewWillDisappear(animated:boolean):void
         {


         }

         viewDidDisappear(animated:boolean):void
         {

         }

         dealloc():void
         {
            this.removeEventListener(egret.TouchEvent.TOUCH_BEGIN,this.onTouchBegan,this);
            this.removeEventListener(egret.TouchEvent.TOUCH_MOVE,this.onTouchMove,this);
            this.removeEventListener(egret.TouchEvent.TOUCH_END,this.onTouchEnd,this);

         }

         /**进入前台
         * applicationDidBecomeActive
         */
         applicationDidBecomeActive(event :any):void
         {


         }

         /**进入后台
         * applicationDidBecomeActive
         */
         applicationWillEnterForeground(event :any):void
         {


         }

         /**
          * 初始场景
          */
         private async createWelComeView()
         {
            let rootLayout = new eui.Component();
            this.addChild(rootLayout);

            //背景
            let sky = utils.createBitmapByName("background_png");
            this.addChild(sky);

            //Logo
            let logo = utils.createBitmapByName("logo_name_00_png");
            this.addChild(logo);
            utils.setAnchorCenter(logo)
            logo.x = 667;
            logo.y = 330;

            egret.Tween.get( logo, { loop:true} )
            .to( { "alpha": 0.2 }, 2000)
            .to( { "alpha": 1.0 }, 2000)

            //copyright
            let copyright = utils.createBitmapByName("copyright_png");
            this.addChild(copyright);
            utils.setAnchorMidBottom(copyright)
            copyright.x = 667;
            copyright.y = 700;

            let tips = new egret.TextField();
            tips.textColor = 0xffffff;
            tips.name = "tips";
            tips.textAlign = "center";
            tips.text = "资源加载中,请稍后...";
            tips.size = 24;
            utils.setAnchorCenter(tips)
            tips.x = 667;
            tips.y = 540;
            this.addChild(tips);

            //loadingbar
            let loadingbar = new eui.ProgressBar()
            loadingbar.direction = eui.Direction.LTR;
            loadingbar.skinName ="resource/eui_skins/welcome/ProgressBarSkin.exml"
            loadingbar.maximum = 100;
            loadingbar.minimum = 0;
            loadingbar.name = "loading";
            loadingbar.slideDuration = 500;
            loadingbar.value = 10;
            loadingbar.labelDisplay.text = `${loadingbar.value}/${ loadingbar.maximum}`;
            loadingbar.labelDisplay.textColor = 0xffffff
            loadingbar.labelDisplay.size = 24;
            loadingbar.labelDisplay.visible = false;
            this.addChild(loadingbar)
            utils.setAnchorCenter(loadingbar);
            loadingbar.x = 667;
            loadingbar.y = 580;            

            //加载大厅资源
           await this.loadPlazaResource();

            //获取登录信息
           this.httpGetLogonInfo().then(()=>{
                 egret.Tween.get(this)
                 .call(()=>{
                     var handler = function loadingFun()
                     {
                         if (loadingbar.value + 5 >= 100)
                         {
                             managers.TimerControl.getInstance().killTimer(this,"loadServer");

                             //切换场景
                             managers.FrameManager.getInstance().replaceScene(new controller.LoginController(),true)   
                         }
                         if (loadingbar.value + 5 < 100)
                         {
                             loadingbar.value += 5;
                         }
                     }
                     managers.TimerControl.getInstance().createTimer(this,1000/60,0,handler,"loadServer")
                });
            });
         }

        /**
         * 预加载资源
         */
        private async loadPlazaResource() 
        {
            try {
                await RES.loadGroup("preload", 0);
                await RES.loadGroup("client",0,this)
            }
            catch (e) 
            {
                console.error(e);
            }
         }

        /**
         * 进度回调
         */
        onProgress(current: number, total: number):void
        {
            //console.log(`current is ${current},total is ${total}`);
            var loadingbar = <eui.ProgressBar>this.getChildByName("loading");
            if (loadingbar.value + 1 <= 80)
            {
                loadingbar.value += 1
            }
        }

        
          /** 触摸事件
          * onTouchBegan
          * onTouchMove
          * onTouchEnd
         */
         private onTouchBegan(event:egret.TouchEvent)
         {
             console.log("onTouch Began");
         }

         private onTouchMove(event:egret.TouchEvent)
         {
             console.log("onTouch move");
         }

         private onTouchEnd(event:egret.TouchEvent)
         {
             console.log("onTouch end");
         }

         /**
          * 获取登录信息
          */
         public httpGetLogonInfo()
         {      
             var tips = <egret.TextField>this.getChildByName("tips");
             tips.text = "加载登录信息中...";

             var loadingbar = <eui.ProgressBar>this.getChildByName("loading");

             return new Promise((resolve)=>{
                   this.ReLoadHttpInfo().then(()=>{
                        //保存服务器信息
                       
                        resolve();

                    }).catch((err)=>{
                        //获取本地信息
                        var logonDomin = egret.localStorage.getItem("logonDomin");
                        var logonPort = egret.localStorage.getItem("logonPort");
                        var webAddr = egret.localStorage.getItem("webAddr");
                        if (logonDomin && logonPort && webAddr)
                        {
                            //保存最近登录信息
                            managers.ServiceManager.getInstance().m_DefaultServerInfo.domain = logonDomin;
                            managers.ServiceManager.getInstance().m_DefaultServerInfo.port = Number(logonPort);
                            managers.ServiceManager.getInstance().m_DefaultServerInfo.webAddr = webAddr
                        }else
                        {
                            managers.FrameManager.getInstance().showToast("登录信息获取失败");
                        }
                    });
             });

         }

         /**
          * 获取登录信息
          */
         public ReLoadHttpInfo()
         {
             return new Promise((resolve,reject)=>{

                 var url  = "http://service.foxuc.com/GetAppService.ashx?action=GetLogonServer";
                 var version    = df.APP_VERSION
                 var params = "&BaseVersion="+ version+"&AppSource="+df.APP_SOURCE

                 var onCompleteHandler = function(e: egret.Event){
                     console.log("请求成功");
                     //保存信息

                     resolve(); 
                 };

                 var onErrorHandler = function(e: egret.Event){
                     console.log("请求失败");
                     resolve();
                     //reject("获取接口失败！");
                 }
                 var httpRequest = new utils.HttpRequest(this,url,params,egret.HttpMethod.GET,onCompleteHandler,onErrorHandler);
             });
         }
    }
}