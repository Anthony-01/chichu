var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var __extends = this && this.__extends || function __extends(t, e) { 
 function r() { 
 this.constructor = t;
}
for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
r.prototype = e.prototype, t.prototype = new r();
};
var client;
(function (client) {
    var ClientLayer = (function (_super) {
        __extends(ClientLayer, _super);
        function ClientLayer() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ClientLayer.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.once(egret.Event.ADDED_TO_STAGE, this.onInitLayer, this);
            this.once(egret.Event.REMOVED_FROM_STAGE, this.onExit, this);
            //注册触摸
            this.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onTouchBegan, this);
            this.addEventListener(egret.TouchEvent.TOUCH_MOVE, this.onTouchMove, this);
            this.addEventListener(egret.TouchEvent.TOUCH_END, this.onTouchEnd, this);
        };
        //初始化
        ClientLayer.prototype.onInitLayer = function () {
            var componet = new eui.Component();
            this.addChild(componet);
            componet.skinName = "resource/eui_skins/Plaza.exml";
            //排行按钮
            var rank = componet.getChildByName("bt_rank");
            rank.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onButtonClick, this);
            //分享
            var share = componet.getChildByName("bt_share");
            share.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onButtonClick, this);
            //设置
            var set = componet.getChildByName("bt_set");
            set.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onButtonClick, this);
            //充值
            var purchase = componet.getChildByName("bt_shop");
            purchase.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onButtonClick, this);
            //兑换
            var exchange = componet.getChildByName("bt_exchange");
            exchange.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onButtonClick, this);
            //活动
            var activity = componet.getChildByName("bt_activity");
            activity.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onButtonClick, this);
            //战绩
            var archive = componet.getChildByName("bt_archive");
            archive.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onButtonClick, this);
            //茶馆
            var teaHouse = componet.getChildByName("bt_tea");
            teaHouse.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onButtonClick, this);
            //比赛
            var match = componet.getChildByName("bt_match");
            match.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onButtonClick, this);
            //进入游戏
            var games = componet.getChildByName("bt_game1");
            games.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onButtonClick, this);
            games = componet.getChildByName("bt_game2");
            games.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onButtonClick, this);
            games = componet.getChildByName("bt_game3");
            games.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onButtonClick, this);
            //邀请Image
            var inviteImage = componet.getChildByName("Invite_image");
            egret.assert(null != inviteImage);
            inviteImage.$setTouchEnabled(false);
            var tw = egret.Tween.get(inviteImage, { loop: true })
                .to({ scaleX: 0.8, scaleY: 0.8 }, 800)
                .to({ scaleX: 1.0, scaleY: 1.0 }, 800);
            //活动红包
            var redPacket = componet.getChildByName("active_icon");
            egret.assert(null != redPacket);
            tw = egret.Tween.get(redPacket, { loop: true })
                .to({ scaleX: 0.2, scaleY: 0.2 }, 300)
                .to({ scaleX: 1.0, scaleY: 1.0 }, 300)
                .to({ scaleX: 1.2, scaleY: 1.2 }, 300)
                .wait(500);
            //比赛动画
            var scorll = componet.getChildByName("lightScroll");
            var group = scorll.getChildByName("lightGroup");
            var light = group.getChildByName("light");
            tw = egret.Tween.get(light, { loop: true })
                .to({ x: -15, y: 100 }, 1200)
                .wait(2000);
            for (var i = 0; i < 5; i++) {
                var str = "star" + ("" + (i + 1));
                var delay = Math.random() * (2000 - 1000);
                var star = componet.getChildByName(str);
                tw = egret.Tween.get(star, { loop: true })
                    .to({ "alpha": 1.0, "rotation": 90, "scaleX": 1.0 }, 1000)
                    .to({ "alpha": 0.0, "rotation": 180, "scaleX": 0.1 }, 1000)
                    .wait(delay);
            }
            //系统公告
            var noticeSprit = new egret.Sprite();
            noticeSprit.width = this.width;
            noticeSprit.height = 200;
            utils.setAnchorMidTop(noticeSprit);
            this.addChild(noticeSprit);
            noticeSprit.x = 667;
            noticeSprit.y = -20;
            //公告背景
            var systemNotice = utils.createBitmapByName("notice_bg_png");
            utils.setAnchorCenter(systemNotice);
            noticeSprit.addChild(systemNotice);
            systemNotice.x = 667;
            systemNotice.y = noticeSprit.height / 2;
            //公告icon
            var icon = utils.createBitmapByName("notice_icon_png");
            utils.setAnchorCenter(icon);
            noticeSprit.addChild(icon);
            icon.x = 360;
            icon.y = noticeSprit.height / 2;
            //显示区域
            group = new eui.Group();
            utils.setAnchorLeftTop(group);
            noticeSprit.addChild(group);
            group.width = systemNotice.width - 50;
            group.height = systemNotice.height;
            group.x = 3;
            group.y = 10;
            //显示内容
            var label = new eui.Label();
            label.text = "欢迎您进入网狐游戏家园,祝您游戏愉快!";
            //设置颜色等文本属性
            label.textColor = 0XFFFFFF;
            label.size = 18;
            label.lineSpacing = 24;
            label.textAlign = egret.HorizontalAlign.JUSTIFY;
            group.addChild(label);
            utils.setAnchorLeftTop(label);
            label.x = 650;
            label.y = 10;
            var scroll = new eui.Scroller;
            scroll.width = systemNotice.width - 50;
            scroll.height = systemNotice.height;
            noticeSprit.addChild(scroll);
            scroll.viewport = group;
            utils.setAnchorCenter(scroll);
            scroll.x = 700;
            scroll.y = noticeSprit.height / 2;
            tw = egret.Tween.get(label, { loop: true })
                .to({ x: -400, y: 10 }, 8000)
                .call(function () {
                label.x = 650;
                label.y = 10;
            });
        };
        //登录层退出
        ClientLayer.prototype.onExit = function () {
            this.removeEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onTouchBegan, this);
            this.removeEventListener(egret.TouchEvent.TOUCH_MOVE, this.onTouchMove, this);
            this.removeEventListener(egret.TouchEvent.TOUCH_END, this.onTouchEnd, this);
        };
        /** 触摸事件
        * onTouchBegan
        * onTouchMove
        * onTouchEnd
       */
        ClientLayer.prototype.onTouchBegan = function (event) {
            console.log("onTouch Began");
        };
        ClientLayer.prototype.onTouchMove = function (event) {
            console.log("onTouch move");
        };
        ClientLayer.prototype.onTouchEnd = function (event) {
            console.log("onTouch end");
        };
        /**
         * 按钮事件
         */
        ClientLayer.prototype.onButtonClick = function (e) {
            var button = e.target;
            var name = button.name;
            if (name == "bt_game1" || name == "bt_game2" || name == "bt_game3") {
                managers.GameManager.getInstance().replaceScene(new controller.GameController(), true);
            }
            else {
                var tw = egret.Tween.get(button)
                    .to({ scaleX: 1.1, scaleY: 1.1 }, 100)
                    .to({ scaleX: 1.0, scaleY: 1.0 }, 100)
                    .call(function () {
                    managers.GameManager.getInstance().replaceScene(new controller.LoginController(), true);
                });
            }
        };
        return ClientLayer;
    }(eui.UILayer));
    client.ClientLayer = ClientLayer;
    __reflect(ClientLayer.prototype, "client.ClientLayer");
})(client || (client = {}));
//# sourceMappingURL=ClientLayer.js.map