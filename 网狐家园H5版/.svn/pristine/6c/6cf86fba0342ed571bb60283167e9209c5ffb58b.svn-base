namespace client {
    export class BattleCreateLayer extends eui.UILayer {
        private _scene: any;
        private _param: any;
        constructor(scene: any,param: any) {
            super();
            this._scene = scene;
            this._param = param;
        }
        createChildren() {
            super.createChildren();
            this.once(egret.Event.ADDED_TO_STAGE, this.onInitLayer, this);
            this.once(egret.Event.REMOVED_FROM_STAGE, this.onExit, this);
        }
        
        private _listView: eui.Scroller;
        private _pageUp: eui.Image;
        private _pageDown: eui.Image;
        private _gameList: any[] = [];
        public onInitLayer() {
            //加载皮肤 
            let componet = new eui.Component();
            this.addChild(componet);
            componet.skinName = skins.BattleCreateLayer;

            //按钮
            let bt = componet.getChildByName("bt_close");
            bt.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.onButtonClick, this);

            //初始列表
            this.getGameListByConfig(this._param.mode);

            //滑动组件
            this._listView = componet.getChildByName("GameListScorll") as eui.Scroller;
            this._listView.addEventListener(egret.Event.CHANGE, this.onScrollerChange, this);
            let Group = this._listView.getChildByName("Group") as eui.Group;
            for (let i = 0; i < this._gameList.length; i++) {

            }
        }

        private getGameListByConfig(mode) {
            switch (mode) {
                case df.MODE_TH_SET:
                    {
                        this.onInitGameList();
                    }
                    break;
                case df.MODE_TH_MODIFY:
                    {

                    }   
                    break;
               case df.MODE_TH_CREATE:
                    {

                    }     
                    break; 
            }
        }

        private onInitGameList() {
            const infolist = managers.ServiceManager.getInstance().getGameListInfo()._Info;
            for (let i =0; i < infolist.length; i++) {
                const gameID = infolist[i].id;
                 //游戏支持判断
                if (infolist[i].show && (!infolist[i].disableBattle)) {
                    const optionList = managers.ServiceManager.getInstance().getServerInfo().getOptionList();
                    const optionSpecial = managers.ServiceManager.getInstance().getServerInfo().getOptionSpecialList();
                    if (null != (optionList && optionList[Number(gameID)]) ) {
                        let map = {id:gameID,specialInfo:optionSpecial[Number(gameID)],optionInfo:optionList[Number(gameID)]};
                        this._gameList.push(map);
                    }
                }
            }
        }

        private onButtonClick(e: egret.Event) {
            let button = <eui.Button>e.target;
            let name = button.name;

            egret.Tween.get(button)
                .to({ scaleX: 1.1, scaleY: 1.1 }, 100)
                .to({ scaleX: 1.0, scaleY: 1.0 }, 100);

            switch (name) {
                case "bt_close":
                    {
                        this._scene.onChangeView();
                    }
                    break;
            }
        }

         /**
         * 滑动监听
         */
        private onScrollerChange(e: egret.Event) {
            let scrollV = this._listView.viewport.scrollV;
            console.log(`scrollV : ${scrollV}`);
            const topOffset = 0;
            const bottomOffset = 150 * this._gameList.length - this._listView.viewport.height;
            //边界
            if (scrollV <= topOffset) {
                this._pageUp.visible = false;
                this._pageDown.visible = true;
            } else if (scrollV > topOffset && scrollV < bottomOffset) {
                this._pageUp.visible = true;
                this._pageDown.visible = true;
            } else {
                this._pageUp.visible = true;
                this._pageDown.visible = false;
            }
        }

        public onExit() {

        }
    }
}