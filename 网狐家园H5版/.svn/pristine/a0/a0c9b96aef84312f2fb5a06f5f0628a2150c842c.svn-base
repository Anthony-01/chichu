namespace controller
{
    export class LoginController extends egret.DisplayObjectContainer implements df.IController
    {
     
         /**
          * 构造
          */
         public constructor()
         {
            super();

            //视图名称
            this.name = "LoginController"

            this.createLoginScene();
            
            //注册触摸
            this.addEventListener(egret.TouchEvent.TOUCH_BEGIN,this.onTouchBegan,this);
            this.addEventListener(egret.TouchEvent.TOUCH_MOVE,this.onTouchMove,this);
            this.addEventListener(egret.TouchEvent.TOUCH_END,this.onTouchEnd,this);

            this.addEventListener(customEvent.CustomEvent.EVENT_ENTER_BACKGROUND,this.applicationWillEnterForeground,this);
            this.addEventListener(customEvent.CustomEvent.EVENT_BECOME_ACTIVE,this.applicationDidBecomeActive,this);
         }

         /* controller生命周期
         *  viewWillAppear
         *  viewDidAppear 
         *  viewWillDisappear 
         *  viewDidDisappear
         *  dealloc 回收资源
         */
         viewWillAppear(animated:boolean):void
         {
             console.log("LoginController viewWillAppear");

         }

         viewDidAppear(animated:boolean):void
         {
             console.log("LoginController viewDidAppear");
         }

         viewWillDisappear(animated:boolean):void
         {
             console.log("LoginController viewWillDisappear");
         }

         viewDidDisappear(animated:boolean):void
         {
             console.log("LoginController viewDidDisappear");
         }

         dealloc():void
         {
            this.removeEventListener(egret.TouchEvent.TOUCH_BEGIN,this.onTouchBegan,this);
            this.removeEventListener(egret.TouchEvent.TOUCH_MOVE,this.onTouchMove,this);
            this.removeEventListener(egret.TouchEvent.TOUCH_END,this.onTouchEnd,this);

            this.removeEventListener(customEvent.CustomEvent.EVENT_ENTER_BACKGROUND,this.applicationWillEnterForeground,this);
            this.removeEventListener(customEvent.CustomEvent.EVENT_BECOME_ACTIVE,this.applicationDidBecomeActive,this);

            console.log("LoginController dealloc");
         }

         /**
         * 切换页面
         * @target 目标view
         * @mode   切换模式
         */
         onChangeView(target :any,mode? :number):void
         {

            
         }

         /**进入前台
         * applicationDidBecomeActive
         */
         applicationDidBecomeActive(event :any):void
         {
             console.log("登录场景-进入前台");
         }

         /**进入后台
         * applicationDidBecomeActive
         */
         applicationWillEnterForeground(event :any):void
         {
              console.log("登录场景-进入后台");
         }

         private logonLayer:client.LoginLayer = null;
         createLoginScene():void
         {
 
             //背景
            let sky = utils.createBitmapByName("background_png");
            this.addChild(sky);

            //加载登录层
            this.logonLayer = new client.LoginLayer();
            this.addChild(this.logonLayer);
         }


         /** 触摸事件
          * onTouchBegan
          * onTouchMove
          * onTouchEnd
         */
         private onTouchBegan(event:egret.TouchEvent)
         {
             console.log("onTouch Began");
         }

         private onTouchMove(event:egret.TouchEvent)
         {
             console.log("onTouch move");

         }

         private onTouchEnd(event:egret.TouchEvent)
         {
             console.log("onTouch end");
         }

         /** 
         * 网络连接成功
         */
         networkConnect()
         {   
             let servicManager = managers.ServiceManager.getInstance();
             let viewFrame = servicManager.getViewFrame()
             if (null != viewFrame)
             {
                 viewFrame.dispatchEvent(new customEvent.CustomEvent(customEvent.CustomEvent.EVENT_CONNECT_COMPLETE));
             }
         }

         /**
          * 网络消息
          */
         onMessage(msg: utils.Message)
         {
             egret.assert(null != msg)

             //消息分发
             let viewFrame = managers.ServiceManager.getInstance().getViewFrame();
             if (null != viewFrame)
             {
                 viewFrame.dispatchEvent(new customEvent.CustomEvent(customEvent.CustomEvent.EVENT_MESSAGE_DISPATCH,false,false,msg));
             }
         }
    }
}