namespace client{

     const enum LOGON {
            MOVEIN = 0,
            MOVEOUT = 1
    }

    export class LoginLayer extends eui.UILayer
    {

        //数组
        readonly Name:Array<string> = 
        [
            "accountBtn",
            "wechatBtn",
            "registBtn",
            "ploatformIcon",
            "rule"
        ];

        readonly OperateRigest = 0;
        readonly OperateLogin = 1;
        readonly OperateWechat = 2;


        /**
         * 操作类型  注册 账号登录 微信登录
         */
        public _operateCode: number = this.OperateLogin;

        protected createChildren(): void {
             super.createChildren();

             this.name = "LoginLayer";
            
             this.once(egret.Event.ADDED_TO_STAGE,this.onInitLayer,this);
             this.once(egret.Event.REMOVED_FROM_STAGE,this.onExit,this);

    
             this.addEventListener(customEvent.CustomEvent.EVENT_CONNECT_COMPLETE,this.connectComplete,this);
             this.addEventListener(customEvent.CustomEvent.EVENT_MESSAGE_DISPATCH,this.onMessage,this)
         }

         private onInitLayer():void
         {
            //人物
            let rule = utils.createBitmapByName("bt_lora_png");
            utils.setAnchorLeftBottom(rule);
            this.addChild(rule);
            rule.name = this.Name[4];
            rule.x = -400;
            rule.y = 810;

            //平台标识
            let ploatformIcon =  utils.createBitmapByName("general_logo_png");
            utils.setAnchorRightBottom(ploatformIcon);
            this.addChild(ploatformIcon);
            ploatformIcon.name = this.Name[3];
            ploatformIcon.scaleX = 0.5
            ploatformIcon.scaleY = 0.5
            ploatformIcon.x = 1330;
            ploatformIcon.y = 950;

            //微信登录
            let wechatBtn = new eui.Button();
            wechatBtn.skinName = "resource/eui_skins/ButtonSkin.exml"
            this.addChild(wechatBtn);
            wechatBtn.addEventListener(egret.TouchEvent.TOUCH_END,this.onButtonClick,this)
            wechatBtn.name = this.Name[1];
            utils.setAnchorCenter(wechatBtn);
            wechatBtn.x = 1400;
            wechatBtn.y = 215;

            //账号登录
            let accountBtn = new eui.Button();
            accountBtn.skinName = "resource/eui_skins/ButtonAccount.exml"
            this.addChild(accountBtn);
            accountBtn.addEventListener(egret.TouchEvent.TOUCH_END,this.onButtonClick,this)
            accountBtn.name = this.Name[0];
            utils.setAnchorCenter(accountBtn);
            accountBtn.x = 1400;
            accountBtn.y = 375;

            //注册账号
            let registBtn = new eui.Button();
            registBtn.skinName = "resource/eui_skins/ButtonRegist.exml"
            this.addChild(registBtn);
            registBtn.name = this.Name[2];
            utils.setAnchorCenter(registBtn);
            registBtn.x = 1400;
            registBtn.y = 535;
            registBtn.addEventListener(egret.TouchEvent.TOUCH_END,this.onButtonClick,this)

            //系统公告
            let noticeSprit = new egret.Sprite();
            noticeSprit.width = this.width;
            noticeSprit.height = 200;
            utils.setAnchorMidTop(noticeSprit);
            this.addChild(noticeSprit);
            noticeSprit.x = 667;
            noticeSprit.y = 0;

            //公告背景
            let systemNotice = utils.createBitmapByName("notice_bg_png");
            utils.setAnchorCenter(systemNotice);
            noticeSprit.addChild(systemNotice);
            systemNotice.x = 667 ;
            systemNotice.y = noticeSprit.height/2;

            //公告icon
            let icon = utils.createBitmapByName("notice_icon_png");
            utils.setAnchorCenter(icon);
            noticeSprit.addChild(icon);
            icon.x = 360;
            icon.y = noticeSprit.height/2;

            //显示区域
            let group = new eui.Group();
            utils.setAnchorLeftTop(group);
            noticeSprit.addChild(group);
            group.width = systemNotice.width - 50;
            group.height = systemNotice.height;
            group.x =  3;
            group.y = 10;

            //显示内容
            let label:eui.Label = new eui.Label();
            label.text = "欢迎您进入网狐游戏家园,祝您游戏愉快!";
            //设置颜色等文本属性
            label.textColor = 0XFFFFFF;
            label.size = 18;
            label.lineSpacing = 24;
            label.textAlign = egret.HorizontalAlign.JUSTIFY;
            group.addChild(label);
            utils.setAnchorLeftTop(label);
            label.x = 650;
            label.y = 10;

            let scroll = new eui.Scroller;
            scroll.width = systemNotice.width - 50;
            scroll.height = systemNotice.height;
            noticeSprit.addChild(scroll);
            scroll.viewport = group;
            utils.setAnchorCenter(scroll);
            scroll.x = 700;
            scroll.y = noticeSprit.height/2

            let tw = egret.Tween.get( label, { loop:true} )
                      .to( {x:-400,y:10}, 8000)
                      .call(()=>{
                          label.x = 650;
                          label.y = 10;
                        });
                     

            //动画切入
            this.ruleAction(LOGON.MOVEIN);

            //注册触摸
            this.addEventListener(egret.TouchEvent.TOUCH_BEGIN,this.onTouchBegan,this);
            this.addEventListener(egret.TouchEvent.TOUCH_MOVE,this.onTouchMove,this);
            this.addEventListener(egret.TouchEvent.TOUCH_END,this.onTouchEnd,this);

            managers.TimerControl.getInstance().createTime(this,1000/60.0,0,this.timerTest,"jack")

          let os = egret.Capabilities.os;

         }

         public timerTest(event: egret.Event)
         {
             console.log("定时器启动");
             
         }

         //连接成功
         public connectComplete():void
         {
            var instance = managers.ServiceManager.getInstance();
            let tcpService = instance.getTcpService();

            //发送注册
            // let args = [65535,1,0x40,utils.PROCESS_VERSION(1,1,0,1),utils.PROCESS_VERSION(1,1,0,0),
            // 1000,"e10adc3949ba59abbe56e057f20f883e",
            // 0,0,"JACK333","JACK333","DWWEZOEZOEZOEDWWEZOEZOEZOEZOEZOE","15013618888"]

            //network.sendRegister(tcpService,args);

        
            //发送登录
            var logonAccounts  = df.CMD_MB_LogonAccounts_Lua();
            logonAccounts.wModuleID = df.INVALID_WORD;
            logonAccounts.wMarketID = 1;
            logonAccounts.cbDeviceType = 0x40;
            logonAccounts.dwAppVersion = utils.PROCESS_VERSION(1,1,0,1);
            logonAccounts.dwPlazaVersion = utils.PROCESS_VERSION(1,1,0,1);
            logonAccounts.dwStationID = 1000;
            logonAccounts.dwMappedNum = 0;
            logonAccounts.szPassword = "e10adc3949ba59abbe56e057f20f883e"
            logonAccounts.szAccounts = "JACK333";
            logonAccounts.szMachineID = "DWWEZOEZOEZOEDWWEZOEZOEZOEZOEZOE";
            logonAccounts.szMobilePhone = "15013618888";

            network.sendLogon(tcpService,logonAccounts);
         }

         public onMessage(e: egret.Event):void
         {
             let msg = <utils.Message>e.data;
             switch (msg.wMainCmd) {
                 case df.MDM_MB_LOGON:
                    {
                        this.onSubLogon(msg);
                    }
                     break;
             
                 default:
                     break;
             }
         }

         /**
          * 网络消息
          */

          public onSubLogon(msg: utils.Message)
          {
              switch (msg.wSubCmd) {
                  case df.SUB_MB_LOGON_SUCCESS:
                  {
                     this.onSubLogonSuccess(msg);
                  }
                      break;
                  case df.SUB_MB_LOGON_FAILURE:
                  {
                     this.onSubLogonFailure(msg);
                  }
                  default:
                      break;
              }
          }

          /**登录成功 */
          public onSubLogonSuccess(msg: utils.Message)
          {
              let LogonSuccess = network.onSubLogonSuccess(msg.cbBuffer); 
              //console.log(LogonSuccess.szNickName);

              //切换场景
              let CientController = new controller.ClientController();
              managers.GameManager.getInstance().replaceScene(CientController,true);

              managers.GameManager.getInstance().dismissPopWait();

          }

          /**登录失败 */
          public onSubLogonFailure(msg: utils.Message)
          {
              let LogonFailure = network.onSubLogonFailure(msg.cbBuffer); 
              managers.GameManager.getInstance().showToast(LogonFailure.szDescribeString);
          }

          /**
          * 按钮事件
          */
          private onButtonClick(e: egret.TouchEvent) {
            let target = e.$target;
            let nTag = (target.$name == this.Name[0]) ? 0 :( (target.$name == this.Name[1]) ? 1 : 2 );
            switch(nTag)
            {
                case 0:
                {
                    managers.GameManager.getInstance().showPopWait("正在加载中...",()=>{
                        let CientController = new controller.ClientController();
                        managers.GameManager.getInstance().replaceScene(CientController,true);
                    });
                    break;
                }

                case 1:
                {
 
                    //managers.ServiceManager.getInstance().createService("172.16.10.50",9000);
                    managers.ServiceManager.getInstance().createSocketService("39.108.54.88",8100);
                    managers.ServiceManager.getInstance().setViewFrame(this);

                    managers.GameManager.getInstance().showPopWait("正在加载中...");

                    //managers.GameManager.getInstance().showToast("未找到微信应用程序,请检查是否安装");
                    break;
                }

                default:
                {

                    managers.TimerControl.getInstance().killTime(this,"jack");

                    /*let regist = new client.Regist();
                    this.addChild(regist);
                    regist.x = -1334;
                    regist.y = 0;
                    regist.alpha = 0.0;
        
                    let callfunc = function()
                    {
                        regist.alpha = 1.0;
                        let tw = egret.Tween.get(regist)
                        .to({x:0, y:0}, 200,egret.Ease.cubicIn);
                    }
                     //动画切入
                   this.ruleAction(LOGON.MOVEOUT,callfunc);*/
                    
                }

            }
        
        }

         /** 触摸事件
          * onTouchBegan
          * onTouchMove
          * onTouchEnd
         */
         private onTouchBegan(event:egret.TouchEvent)
         {
             console.log("onTouch Began");
         }

         private onTouchMove(event:egret.TouchEvent)
         {
             console.log("onTouch move");

         }

         private onTouchEnd(event:egret.TouchEvent)
         {
             console.log("onTouch end");

         }

         //登录层退出
         private onExit():void
         {
             this.removeEventListener(egret.TouchEvent.TOUCH_BEGIN,this.onTouchBegan,this);
             this.removeEventListener(egret.TouchEvent.TOUCH_MOVE,this.onTouchMove,this);
             this.removeEventListener(egret.TouchEvent.TOUCH_END,this.onTouchEnd,this);
             this.removeEventListener(customEvent.CustomEvent.EVENT_CONNECT_COMPLETE,this.connectComplete,this);
             this.removeEventListener(customEvent.CustomEvent.EVENT_MESSAGE_DISPATCH,this.onMessage,this)

             managers.ServiceManager.getInstance().setViewFrame(null);
         }

         //切入切出动画
         public ruleAction(action:number,func?:any):void
         {
             //动画
            let wechatBtn = this.getChildByName("wechatBtn");
            let accountBtn = this.getChildByName("accountBtn");
            let registBtn = this.getChildByName("registBtn");
            let ploatformIcon = this.getChildByName("ploatformIcon");
            let rule = this.getChildByName("rule");
            let tw1 = egret.Tween.get(rule)
                      .wait(300)
                      .to({x:10, y:810}, 100,egret.Ease.cubicIn);

            let tw = egret.Tween.get(wechatBtn)
                     .wait(200)
                     .to( {x:( action==0 ) ? 665 : 1600, y:215}, 100,egret.Ease.cubicIn )
                     .call(()=>{ 
                                    tw = egret.Tween.get(accountBtn)
                                    .to( {x:( action==0 ) ? 665 : 1600, y:375}, 100,egret.Ease.cubicIn )
                                    .call(()=>{
                                                    tw = egret.Tween.get(registBtn)
                                                    .to( {x:( action==0 ) ? 665 : 1600, y:535}, 100,egret.Ease.cubicIn)
                                                    .call(()=>{
                                                        tw = egret.Tween.get(ploatformIcon)
                                                        .to({x:1330, y:( action==0 ) ? 750 : 950 },100,egret.Ease.cubicIn)
                                                        .call(()=>{if (null != func) {func()}})
                                                    })
                                               })
                                    
                                });


         }
    }

}